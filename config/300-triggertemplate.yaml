# Copyright 2019 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: triggertemplates.triggers.tekton.dev
  labels:
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-triggers
    triggers.tekton.dev/release: "devel"
    version: "devel"
spec:
  group: triggers.tekton.dev
  scope: Namespaced
  names:
    kind: TriggerTemplate
    plural: triggertemplates
    singular: triggertemplate
    shortNames:
      - tt
    categories:
      - tekton
      - tekton-triggers
  versions:
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          description: TriggerTemplate takes parameters and uses them to create CRDs
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the desired state of the TriggerTemplate from the client
              type: object
              properties:
                params:
                  type: array
                  items:
                    description: ParamSpec defines an arbitrary named  input whose value can be supplied by a `Param`.
                    type: object
                    required:
                      - name
                    properties:
                      default:
                        description: Default is the value a parameter takes if no input value via a Param is supplied.
                        type: string
                      description:
                        description: Description is a user-facing description of the parameter that may be used to populate a UI.
                        type: string
                      name:
                        description: Name declares the name by which a parameter is referenced.
                        type: string
                resourcetemplates:
                  type: array
                  items:
                    description: TriggerResourceTemplate describes a resource to create
                    type: object
            status:
              description: TriggerTemplateStatus describes the desired state of TriggerTemplate
              type: object
      # Opt into the status subresource so metadata.generation
      # starts to increment
      subresources:
        status: {}
    - name: v1alpha1
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          description: TriggerTemplate takes parameters and uses them to create CRDs
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: Spec holds the desired state of the TriggerTemplate from the client
              type: object
              properties:
                params:
                  type: array
                  items:
                    description: ParamSpec defines an arbitrary named  input whose value can be supplied by a `Param`.
                    type: object
                    required:
                      - name
                    properties:
                      default:
                        description: Default is the value a parameter takes if no input value via a Param is supplied.
                        type: string
                      description:
                        description: Description is a user-facing description of the parameter that may be used to populate a UI.
                        type: string
                      name:
                        description: Name declares the name by which a parameter is referenced.
                        type: string
                resourcetemplates:
                  type: array
                  items:
                    description: TriggerResourceTemplate describes a resource to create
                    type: object
            status:
              description: TriggerTemplateStatus describes the desired state of TriggerTemplate
              type: object
      # Opt into the status subresource so metadata.generation
      # starts to increment
      subresources:
        status: {}
