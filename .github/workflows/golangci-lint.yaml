name: lint
on:
  # only check PRs for new issues until preexisting issues are cleaned
  # push:
  #   branches:
  #     - main
  pull_request:
    branches:
      - main
      - release-*
permissions:
  contents: read
  # Optional: allow read access to pull request. Use with `only-new-issues` option.
  pull-requests: read
jobs:
  golangci:
    # Because this repository uses vendored dependencies, and grouping for dependabot updates, the
    # PRs created by dependabot are huge. This causes issues for the linter:
    #   https://github.com/golangci/golangci-lint-action/issues/996
    # The chances of dependabot creating new linting issues are minimal.
    if: github.actor != 'dependabot[bot]'
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "1.23"

      - uses: actions/checkout@6d193bf28034eafb982f37bd894289fe649468fc # v4.1.7

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6.2.0
        with:
          # Optional: version of golangci-lint to use in form of v1.2 or v1.2.3 or `latest` to use the latest version
          version: latest

          # Optional: working directory, useful for monorepos
          # working-directory: somedir

          # Optional: golangci-lint command line arguments.

          # Optional: show only new issues if it's a pull request. The default value is `false`.
          only-new-issues: true
          args: --timeout=20m

          # Optional: if set to true then the all caching functionality will be complete disabled,
          #           takes precedence over all other caching options.
          # skip-cache: true

          # Optional: if set to true then the action don't cache or restore ~/go/pkg.
          # skip-pkg-cache: true

          # Optional: if set to true then the action don't cache or restore ~/.cache/go-build.
          # skip-build-cache: true
